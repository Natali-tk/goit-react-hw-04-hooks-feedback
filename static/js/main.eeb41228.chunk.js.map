{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,WAAa,iC,qICehBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAMC,QAA1B,UACE,oBAAIF,UAAWC,IAAMH,MAArB,SAA6BA,IAC5BC,M,gBCkBQI,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,wBACET,UAAWC,IAAMS,OAEjBC,KAAK,SACLC,KAAMH,EACNI,QAAS,kBAAIR,EAAgBI,IAL/B,SAOGA,GALIA,S,gBCaEK,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKnB,UAAWC,IAAMmB,WAAtB,UACE,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCGSE,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KCEG,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAkBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAO1B,OACE,qCACE,cAAC,EAAD,CAASnB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEM,QAAS,CAAEW,OAAMC,UAASC,OAC1BZ,gBA7BY,SAAAO,GAClB,OAAQA,GACN,IAAK,OACHa,GAAQ,SAAAV,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHW,GAAW,SAAAV,GAAO,OAAIA,EAAU,KAChC,MACF,IAAK,MACHW,GAAO,SAAAV,GAAG,OAAIA,EAAM,KACpB,MACF,QACE,aAoBF,cAAC,EAAD,CAASnB,MAAO,aAAhB,SACG8B,IACC,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAlBDU,KAAKC,MAAOf,EAAOa,IAAwB,OAqB5C,cAAC,EAAD,CAAcN,QAAS,2BCrDjC,IAYeS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eeb41228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2P7F9\",\"title\":\"Section_title__YlHCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2JMp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2upax\"};","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={style.section}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {Object.keys(options).map(option => (\r\n      <button\r\n        className={style.button}\r\n        key={option}\r\n        type=\"button\"\r\n        name={option}\r\n        onClick={()=>onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={style.statistics}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage} %</p>\r\n    </div>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message:PropTypes.string.isRequired  \r\n}\r\n\r\nexport default Notification\r\n","import React, { useState } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = name => {\n    switch (name) {\n      case 'good':\n        setGood(good => good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad => bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n   const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleClick}\n        />\n      </Section>\n      <Section title={'Statistics'}>\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message={'No feedback given'} />\n        )}\n      </Section>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}